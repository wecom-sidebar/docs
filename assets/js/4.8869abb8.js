(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{368:function(t,s,e){t.exports=e.p+"assets/img/whistle.f87c3f52.png"},369:function(t,s,e){t.exports=e.p+"assets/img/mac-proxy-1.c3fae9d3.jpg"},370:function(t,s,e){t.exports=e.p+"assets/img/mac-proxy-2.b32a8984.jpg"},371:function(t,s,e){t.exports=e.p+"assets/img/whistle-rules.171414f8.png"},372:function(t,s,e){t.exports=e.p+"assets/img/whistle_results.2a1de664.png"},391:function(t,s,e){"use strict";e.r(s);var a=e(45),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"本地开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地开发"}},[t._v("#")]),t._v(" 本地开发")]),t._v(" "),a("p",[t._v("刚刚已经把项目启动了，前端在 3000 端口，后端在 5000 端口。")]),t._v(" "),a("p",[t._v("侧边栏开发最难的莫过于配置本地开发环境了，下面就聊聊怎么搭建本地开发环境。")]),t._v(" "),a("h2",{attrs:{id:"侧边栏代理到本地"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#侧边栏代理到本地"}},[t._v("#")]),t._v(" 侧边栏代理到本地")]),t._v(" "),a("p",[t._v('翻了很多网上的资料，基本都是改 hosts 文件来让侧边栏页面 打到 localhost 的。\n怎么说呢，感觉上就很不"本地"，因为会有一个 '),a("strong",[t._v('"改了本地 hosts 文件，等开发完了要再改回去"')]),t._v(" 的心理负担，不是很灵活。")]),t._v(" "),a("p",[t._v("我们只想做个代理、或者转发呀。")]),t._v(" "),a("h2",{attrs:{id:"whistle-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#whistle-简介"}},[t._v("#")]),t._v(" Whistle 简介")]),t._v(" "),a("p",[t._v("这里就不得不安利一波我们 IMWeb 出品的 "),a("a",{attrs:{href:"https://wproxy.org/whistle/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Whistle"),a("OutboundLink")],1),t._v(" 啦，whistle(读音[ˈwɪsəl]，拼音[wēisǒu])，是基于Node实现的跨平台web调试代理工具。")]),t._v(" "),a("p",[t._v("有了 Whistle 代理工具，可以轻松地将侧边栏代理到 localhost：")]),t._v(" "),a("ol",[a("li",[t._v("让侧边栏页面走 whistle 代理")]),t._v(" "),a("li",[t._v("在 whistle 上设置代理规则，把页面所有请求都代理到 localhost")])]),t._v(" "),a("h2",{attrs:{id:"whistle-全局代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#whistle-全局代理"}},[t._v("#")]),t._v(" Whistle 全局代理")]),t._v(" "),a("p",[t._v("首先先安装 Whistle")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g whistle\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启 Whistle")]),t._v("\nw2 start\n")])])]),a("p",[t._v("打开 "),a("a",{attrs:{href:"http://127.0.0.1:8899/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://127.0.0.1:8899/"),a("OutboundLink")],1),t._v(" 可见 Whistle 代理面板。")]),t._v(" "),a("p",[a("img",{attrs:{src:e(368),alt:""}})]),t._v(" "),a("p",[t._v("下面要把本机的请求都用 Whistle 来做代理：")]),t._v(" "),a("p",[a("strong",[t._v("System Preferences > Network > Advanced > Proxies > HTTP or HTTPS")])]),t._v(" "),a("p",[a("img",{attrs:{src:e(369),alt:""}}),t._v(" "),a("img",{attrs:{src:e(370),alt:""}})]),t._v(" "),a("p",[t._v("这里最好 Web Proxy(HTTP) 和 Secure WebProxy(HTTPS) 都用 127.0.0.1:8899 做代理。")]),t._v(" "),a("p",[a("strong",[t._v('Whistle 来全局代理的一个缺点就是有些网络请求（比如公司邮件服务等）可能出现访问失败，\n可以在上面的 "Bypass proxy settings for these Hosts & Domains" 里添加需要排除的网络请求。')])]),t._v(" "),a("h2",{attrs:{id:"whistle-捕获-https"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#whistle-捕获-https"}},[t._v("#")]),t._v(" Whistle 捕获 Https")]),t._v(" "),a("p",[t._v("配置页的一定要捕获 https 协议的，所以我们还要允许 Whistle 捕获 HTTPS 请求。")]),t._v(" "),a("p",[t._v("按下面步骤一步一步来，要全套做完。")]),t._v(" "),a("p",[a("a",{attrs:{href:"http://wproxy.org/whistle/webui/https.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("允许 Whistle 捕获 HTTPS 请求"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"添加-whistle-代理规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加-whistle-代理规则"}},[t._v("#")]),t._v(" 添加 Whistle 代理规则")]),t._v(" "),a("p",[t._v("当完美安装 + 配置好了 Whistle 之后，就可以加入代理规则：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代理后端（模板的 baseURL 写死为 backend.com，这里代理到本地的 5000 端口）")]),t._v("\n//backend.com //127.0.0.1:5000\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 代理前端（侧边栏页面代理到本地的 3000 端口）")]),t._v("\n//service-xxx-yyy.gz.apigw.tencentcs.com http://127.0.0.1:3000\n")])])]),a("p",[a("img",{attrs:{src:e(371),alt:""}})]),t._v(" "),a("p",[t._v("重启企业微信（会有缓存），打开侧边栏。")]),t._v(" "),a("p",[a("img",{attrs:{src:e(372),alt:""}})]),t._v(" "),a("p",[t._v("恭喜你！已经成功搭建好了本地环境了👏")])])}),[],!1,null,null,null);s.default=r.exports}}]);